/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package transapp;

import java.io.File;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

/**
 *
 * @author mohamed chagour
 */
public class Base extends javax.swing.JFrame {

    /**
     * Creates new form Base
     */
    
    public Base() {
        initComponents();
        this.setTitle("DataBase");
	this.setSize(930,570);
	this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(248, 148, 6));
        jPanel1.setLayout(null);

        jButton1.setText("Supprimer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(630, 40, 120, 25);

        jButton2.setText("Afficher tout");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(630, 70, 120, 25);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel2.setText("Nom:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(30, 30, 70, 40);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField1);
        jTextField1.setBounds(110, 30, 140, 40);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel1.setText("Prenom:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(310, 30, 80, 40);

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField2);
        jTextField2.setBounds(410, 30, 170, 40);

        jButton3.setText("Rechercher");
        jButton3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(630, 10, 120, 25);

        jButton4.setText("Quitter");
        jButton4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(840, 40, 73, 23);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 930, 100);

        jPanel2.setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Nom", "Prenom", "Telephone", "Date", "Taille", "Poids", "Destination", "Etat"
            }
        ));
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTable1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTable1FocusLost(evt);
            }
        });
        jTable1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTable1InputMethodTextChanged(evt);
            }
        });
        jTable1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable1PropertyChange(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTable1KeyTyped(evt);
            }
        });
        jTable1.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                jTable1VetoableChange(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 930, 370);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 100, 930, 370);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //Getting the model
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //Taking the selected row
        int x[]=jTable1.getSelectedRows();
        if (x.length==1){
            try {
                int k=0;
                int col=0;
                int lig=x[0];
                String Ch=model.getValueAt(lig,col).toString();
                
                File inputFile = new File("input.xml");
                DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
                DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
                Document doc = dBuilder.parse(inputFile);
                doc.getDocumentElement().normalize();

                 NodeList nList = doc.getElementsByTagName("Livraison");
		         
		         
		         for (int temp = 0; temp < nList.getLength(); temp++) {
		            Node nNode = nList.item(temp);
		            
		            if (nNode.getNodeType() == Node.ELEMENT_NODE) {
		               Element eElement = (Element) nNode;
                               k++;         
                                    if(Ch.equals(eElement.getAttribute("code"))){
                                         break; 
                                    }
		               }
		         }
                //testing on the deleting of the element
                         
                int reply =JOptionPane.showConfirmDialog(null,"Êtes-vous sûr de vouloir supprimer ce produit ?","Message de confirmation", JOptionPane.YES_NO_OPTION);
                if (reply == JOptionPane.YES_OPTION) {
                    
                    for(int i=0;i<x.length;i++){
                        //delete the element from jTabel
                        
                        System.out.println(x[i]);
                        model.removeRow(x[i]-i);          
                        
                        //delete the element from XML file
                        
                        Node cars = doc.getFirstChild();
                        NodeList childNodes = cars.getChildNodes();
                        /* i found out that the next method methode delete the first child when you enter "1", 
                        the second child when you enter "3" 
                        the third child when you enter "5" */
                        //0->1
                        //1->3
                        //2->5
                        //3->7...
                        cars.removeChild(childNodes.item(2*(k-1)+1));
                    }  
                }
                else{
                    
                }

                //Write the content in xml file
                TransformerFactory transformerFactory = TransformerFactory.newInstance();
                Transformer transformer = transformerFactory.newTransformer();
                DOMSource source = new DOMSource(doc);
                StreamResult result = new StreamResult(new File("input.xml"));
                transformer.transform(source, result);

            } catch (Exception ex) {
                     ex.printStackTrace();
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Vous pouvez supprimer seulement une seule ligne!");
        }
          
    }//GEN-LAST:event_jButton1ActionPerformed

            
     //               String type = (String) jTableAffichage.getValueAt(indiceLigneSelectionee,0);
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
                        
                        //Show All as in the class Consult
        
                         DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
			 model.setRowCount(0);
			try {
		         File inputFile = new File("input.xml");
		         DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
		         DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
		         Document doc = dBuilder.parse(inputFile);
		         doc.getDocumentElement().normalize();
		         
		         NodeList nList = doc.getElementsByTagName("Livraison");
		         
		         
		         for (int temp = 0; temp < nList.getLength(); temp++) {
		            Node nNode = nList.item(temp);
		            
		            if (nNode.getNodeType() == Node.ELEMENT_NODE) {
		               Element eElement = (Element) nNode;
                                        
                               model.addRow(new Object[]{
                                            eElement.getAttribute("code"),
                                            eElement
                                           .getElementsByTagName("Nom")
                                           .item(0).getTextContent(), 
                                            eElement
                                           .getElementsByTagName("Prenom")
                                           .item(0).getTextContent(),
                                            eElement
                                           .getElementsByTagName("Telephone")
                                           .item(0).getTextContent(),
                                            eElement
                                           .getElementsByTagName("Date")
                                           .item(0).getTextContent(),
                                            eElement
                                           .getElementsByTagName("Poids")
                                           .item(0).getTextContent(),
                                            eElement
                                           .getElementsByTagName("Taille")
                                           .item(0).getTextContent(),
                                            eElement
                                           .getElementsByTagName("Destination")
                                           .item(0).getTextContent(),
                                            eElement
                                           .getElementsByTagName("Etat")
                                           .item(0).getTextContent()
                                            });
		               }
		         }
		       
		      } catch (Exception ex) {
		         ex.printStackTrace();
		      }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        //Search also as in the Class Consult
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        String test11 = "false";

        try {
            File inputFile = new File("input.xml");
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            Document doc = dBuilder.parse(inputFile);
            doc.getDocumentElement().normalize();

            NodeList nList = doc.getElementsByTagName("Livraison");

            for (int temp = 0; temp < nList.getLength(); temp++) {
                Node nNode = nList.item(temp);

                if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                    Element eElement = (Element) nNode;

                    if (jTextField1.getText().equals("") &&
                        jTextField2.getText().equals("")){
                        JOptionPane.showMessageDialog(null, "Cette Livrasion n'existe pas");
                        break;
                    }
                    if (jTextField2.getText().equals("")
                    ){
                        if ( jTextField1.getText().equals(eElement
                            .getElementsByTagName("Nom")
                            .item(0).getTextContent())) {

                                model.addRow(new Object[]{
                                    eElement.getAttribute("code"),
                                    eElement
                                    .getElementsByTagName("Nom")
                                    .item(0).getTextContent(),
                                    eElement
                                    .getElementsByTagName("Prenom")
                                    .item(0).getTextContent(),
                                    eElement
                                    .getElementsByTagName("Telephone")
                                    .item(0).getTextContent(),
                                    eElement
                                    .getElementsByTagName("Date")
                                    .item(0).getTextContent(),
                                    eElement
                                    .getElementsByTagName("Poids")
                                    .item(0).getTextContent(),
                                    eElement
                                    .getElementsByTagName("Taille")
                                    .item(0).getTextContent(),
                                    eElement
                                    .getElementsByTagName("Destination")
                                    .item(0).getTextContent(),
                                    eElement
                                    .getElementsByTagName("Etat")
                                    .item(0).getTextContent()
                                });

                        test11="true";

                    }
                }
                if (jTextField1.getText().equals("")
                ){
                    if ( jTextField2.getText().equals(eElement
                        .getElementsByTagName("Prenom")
                        .item(0).getTextContent())) {

                            model.addRow(new Object[]{
                                eElement.getAttribute("code"),
                                eElement
                                .getElementsByTagName("Nom")
                                .item(0).getTextContent(),
                                eElement
                                .getElementsByTagName("Prenom")
                                .item(0).getTextContent(),
                                eElement
                                .getElementsByTagName("Telephone")
                                .item(0).getTextContent(),
                                eElement
                                .getElementsByTagName("Date")
                                .item(0).getTextContent(),
                                eElement
                                .getElementsByTagName("Poids")
                                .item(0).getTextContent(),
                                eElement
                                .getElementsByTagName("Taille")
                                .item(0).getTextContent(),
                                eElement
                                .getElementsByTagName("Destination")
                                .item(0).getTextContent(),
                                eElement
                                .getElementsByTagName("Etat")
                                .item(0).getTextContent()
                            });

                    test11="true";

                }

            }

            if ( jTextField1.getText().equals(eElement
                .getElementsByTagName("Nom")
                .item(0).getTextContent())
            &&
                jTextField2.getText().equals(eElement
                .getElementsByTagName("Prenom")
                .item(0).getTextContent())) {

                            model.addRow(new Object[]{
                                eElement.getAttribute("code"),
                                eElement
                                .getElementsByTagName("Nom")
                                .item(0).getTextContent(),
                                eElement
                                .getElementsByTagName("Prenom")
                                .item(0).getTextContent(),
                                eElement
                                .getElementsByTagName("Telephone")
                                .item(0).getTextContent(),
                                eElement
                                .getElementsByTagName("Date")
                                .item(0).getTextContent(),
                                eElement
                                .getElementsByTagName("Poids")
                                .item(0).getTextContent(),
                                eElement
                                .getElementsByTagName("Taille")
                                .item(0).getTextContent(),
                                eElement
                                .getElementsByTagName("Destination")
                                .item(0).getTextContent(),
                                eElement
                                .getElementsByTagName("Etat")
                                .item(0).getTextContent()
                            });

            test11="true";

        }

        }
        }
        if(test11.equals("false"))
        JOptionPane.showMessageDialog(null, "Cette Livrasion n'existe pas");
        System.out.println(test11);

        } catch (Exception ex) {
            ex.printStackTrace();
        }//----------------------------------------------------------------

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jTable1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusLost
        // TODO add your handling code here:
                
    }//GEN-LAST:event_jTable1FocusLost
    
    private void jTable1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusGained
        // TODO add your handling code here:
        //int row = jTable1.getSelectedRow();
        //int column = jTable1.getSelectedColumn();
           //     System.out.println(row+" "+column);
            
                
    }//GEN-LAST:event_jTable1FocusGained

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        
    }//GEN-LAST:event_jTable1KeyPressed

    private void jTable1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1KeyTyped

    private void jTable1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTable1InputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1InputMethodTextChanged
    
    int x4=0;
    int row5=0;
    int col5=1;
    String Ch5="";
    String Val;
    
    private void jTable1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable1PropertyChange
        // TODO add your handling code here:
        // this is where we puted the modification method on the Jtable
        /* this methode we found when you open the application the first time variable evt gets the string "i don't remember it" 
        and when you get in the jtable it start getting the string "tableCellEditor", i tested it with S.o.p(evt.getPrepertyName())
        the same String after modification so */
        
        //when it gets the first time x4 change to "1" and none of the "if" works because the string is defferent to "tableCellEitor"
        
        //the second time x4 change to "2" and the String is right so it gets to the first "if" (Check the fist if ) 
        x4++;
        
        if(evt.getPropertyName().equals("tableCellEditor") && x4%2==0){
                
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                // We get the first element before change "Row" and "Col" 
                row5 = jTable1.getSelectedRow();
                col5 = jTable1.getSelectedColumn();
                
                //Ch5 gets the Value before change
                Ch5=model.getValueAt(row5,col5).toString();
                
                //getting the unique code of the element before it changes
                Val=model.getValueAt(row5,0).toString();
        }
        
        if(evt.getPropertyName().equals("tableCellEditor") && x4%2==1){
            //We're affecting the modification here
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            //Taking the new String
            String Ch2=model.getValueAt(row5,col5).toString();
            //If there is a difference
            if ((!Ch5.equals(Ch2))&& col5!=0){
                    
                    int reply =JOptionPane.showConfirmDialog(null,"Êtes-vous sûr de vouloir modifier ce valeur ?","Message de confirmation", JOptionPane.YES_NO_OPTION);
                    if (reply == JOptionPane.YES_OPTION) {
                        try {
                            //Getting in the XML File
                             File inputFile = new File("input.xml");
                             DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
                             DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
                             Document doc = dBuilder.parse(inputFile);
                             doc.getDocumentElement().normalize();
                             //As in Consult
                             NodeList nList = doc.getElementsByTagName("Livraison");

                                    
                             for (int temp = 0; temp < nList.getLength(); temp++) {
                                Node nNode = nList.item(temp);

                                if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                                   Element eElement = (Element) nNode;
                                   if (Val.equals(eElement.getAttribute("code").toString())){    
                                        //Switching in the column that needs to change 
                                        switch (col5) {
                                                 case 1:  eElement.
                                                          getElementsByTagName("Nom").
                                                          item(0).setTextContent(Ch2);;
                                                          break;
                                                 case 2:  eElement.
                                                          getElementsByTagName("Prenom").
                                                          item(0).setTextContent(Ch2);
                                                          break;
                                                 case 3:  eElement.
                                                          getElementsByTagName("Telephone").
                                                          item(0).setTextContent(Ch2);
                                                          break;
                                                 case 4:  eElement.
                                                          getElementsByTagName("Date").
                                                          item(0).setTextContent(Ch2);
                                                          break;
                                                 case 5:  eElement.
                                                          getElementsByTagName("Taille").
                                                          item(0).setTextContent(Ch2);
                                                          break;
                                                 case 6:  eElement.
                                                          getElementsByTagName("Poids").
                                                          item(0).setTextContent(Ch2);
                                                          break;
                                                 case 7:  eElement.
                                                          getElementsByTagName("Destination").
                                                          item(0).setTextContent(Ch2);
                                                          break;
                                                 case 8:  eElement.
                                                          getElementsByTagName("Etat").
                                                          item(0).setTextContent(Ch2);
                                                          break;
                                                 default: break;
                                             }
                                        }
                                   }
                             }

                             //write the content in xml file
                            TransformerFactory transformerFactory = TransformerFactory.newInstance();
                            Transformer transformer = transformerFactory.newTransformer();
                            DOMSource source = new DOMSource(doc);
                            StreamResult result = new StreamResult(new File("input.xml"));
                            transformer.transform(source, result);


                          } catch (Exception ex) {
                             ex.printStackTrace();
                          }

                    }else{
                        //if the value Has not change
                        model.setValueAt(Ch5,row5,col5);
                    }
                }else if(col5==0){
                    //You can't change the codes Column
                    model.setValueAt(Ch5,row5,col5);
                    JOptionPane.showMessageDialog(null, "Vous Pouvez pas changer le champ code");
                    
                }else {
                
            }
        
        }
    }//GEN-LAST:event_jTable1PropertyChange

    private void jTable1VetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_jTable1VetoableChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTable1VetoableChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Base.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Base.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Base.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Base.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Base().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
